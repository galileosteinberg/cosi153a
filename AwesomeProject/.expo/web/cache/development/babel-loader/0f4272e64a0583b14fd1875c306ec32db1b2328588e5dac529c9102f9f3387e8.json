{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Movie = function Movie(_ref) {\n  var title = _ref.title,\n    releaseYear = _ref.releaseYear;\n  return _jsx(View, {\n    style: {\n      backgroundColor: 'green',\n      flexDirection: 'column'\n    },\n    children: _jsxs(Text, {\n      style: {\n        fontSize: 20\n      },\n      children: [title, \", \", releaseYear]\n    })\n  });\n};\nvar APIdemo = function APIdemo() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var getMovies = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://reactnative.dev/movies.json');\n        var json = yield response.json();\n        setData(json.movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getMovies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getMovies();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20\n      },\n      children: \"API Demo\"\n    }), _jsx(FlatList, {\n      data: data.slice(0, 2),\n      keyExtractor: function keyExtractor(_ref3, index) {\n        var id = _ref3.id;\n        return id;\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(Movie, {\n          title: item.title,\n          releaseYear: item.releaseYear\n        });\n      }\n    })]\n  });\n};\nexport default APIdemo;","map":{"version":3,"names":["React","useState","useEffect","Text","FlatList","View","jsxs","_jsxs","jsx","_jsx","Movie","_ref","title","releaseYear","style","backgroundColor","flexDirection","children","fontSize","APIdemo","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","getMovies","_ref2","_asyncToGenerator","response","fetch","json","movies","error","console","apply","arguments","slice","keyExtractor","_ref3","index","id","renderItem","_ref4","item"],"sources":["/Users/GSteinberg/Desktop/GitHub/cosi153a/AwesomeProject/components/APIdemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, FlatList, View } from 'react-native';\n\nconst Movie = ({ title, releaseYear }) => (\n    <View style={{backgroundColor:'green', flexDirection: 'column'}}>\n        <Text style = {{fontSize: 20}}>\n            {title}, {releaseYear}</Text>\n    </View>\n);\n\nconst APIdemo = () => {\n    const [data,setData] = useState([]);\n    const [loading,setLoading] = useState(true);\n\n    const getMovies = async () => {\n        try {\n          const response = await fetch('https://reactnative.dev/movies.json');\n          const json = await response.json();\n          setData(json.movies); \n        } catch (error) {\n          console.error(error);\n        } finally {\n            setLoading(false);\n        }\n      };\n\n    useEffect(() => {getMovies()}, [])\n\n    return(\n        <View>\n            <Text style = {{fontSize: 20}}>\n                API Demo</Text>\n            \n            <FlatList\n                data={data.slice(0,2)}\n                keyExtractor={({ id }, index) => id}\n                renderItem={({ item }) => (\n                    <Movie\n                        title={item.title}\n                        releaseYear={item.releaseYear}  \n                    />\n                )}\n            />\n\n        </View>\n    );\n}\n\nexport default APIdemo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA;EAAA,IAAMC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EAAA,OAC/BJ,IAAA,CAACJ,IAAI;IAACS,KAAK,EAAE;MAACC,eAAe,EAAC,OAAO;MAAEC,aAAa,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAC5DV,KAAA,CAACJ,IAAI;MAACW,KAAK,EAAI;QAACI,QAAQ,EAAE;MAAE,CAAE;MAAAD,QAAA,GACzBL,KAAK,EAAC,IAAE,EAACC,WAAW;IAAA,CAAO;EAAC,CAC/B,CAAC;AAAA,CACV;AAED,IAAMM,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAClB,IAAAC,SAAA,GAAuBnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAACG,OAAO,GAAAH,UAAA;EACnB,IAAAI,UAAA,GAA6BxB,QAAQ,CAAC,IAAI,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAApCE,OAAO,GAAAD,UAAA;IAACE,UAAU,GAAAF,UAAA;EAEzB,IAAMG,SAAS;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC1B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAMC,IAAI,SAASF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCV,OAAO,CAACU,IAAI,CAACC,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,SAAS;QACNR,UAAU,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAAA,gBAVGC,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUZ;EAEHrC,SAAS,CAAC,YAAM;IAAC2B,SAAS,CAAC,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;EAElC,OACItB,KAAA,CAACF,IAAI;IAAAY,QAAA,GACDR,IAAA,CAACN,IAAI;MAACW,KAAK,EAAI;QAACI,QAAQ,EAAE;MAAE,CAAE;MAAAD,QAAA,EAAC;IACnB,CAAM,CAAC,EAEnBR,IAAA,CAACL,QAAQ;MACLmB,IAAI,EAAEA,IAAI,CAACiB,KAAK,CAAC,CAAC,EAAC,CAAC,CAAE;MACtBC,YAAY,EAAE,SAAAA,aAAAC,KAAA,EAASC,KAAK;QAAA,IAAXC,EAAE,GAAAF,KAAA,CAAFE,EAAE;QAAA,OAAcA,EAAE;MAAA,CAAC;MACpCC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OACftC,IAAA,CAACC,KAAK;UACFE,KAAK,EAAEmC,IAAI,CAACnC,KAAM;UAClBC,WAAW,EAAEkC,IAAI,CAAClC;QAAY,CACjC,CAAC;MAAA;IACJ,CACL,CAAC;EAAA,CAEA,CAAC;AAEf,CAAC;AAED,eAAeM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}