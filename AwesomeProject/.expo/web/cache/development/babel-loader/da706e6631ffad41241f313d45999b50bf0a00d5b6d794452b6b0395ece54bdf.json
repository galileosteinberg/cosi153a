{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar axios = require('axios');\nvar get_latlon = function () {\n  var _ref = _asyncToGenerator(function* (address) {\n    address = encodeURI(address);\n    var url = \"https://geocoding.geo.census.gov/geocoder\" + \"/locations/onelineaddress\" + \"?address=\" + address + \"&benchmark=2020\" + \"&format=json\";\n    console.log('url=', url);\n    var response = yield fetch(url);\n    var json = yield response.json();\n    return json.result.addressMatches;\n  });\n  return function get_latlon(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar get_forecastURL = function () {\n  var _ref2 = _asyncToGenerator(function* (latlon) {\n    var url = \"https://api.weather.gov/points/\" + latlon.y + \",\" + latlon.x;\n    var response = yield axios.get(url);\n    return response.data.properties.forecast;\n  });\n  return function get_forecastURL(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar get_weather = function () {\n  var _ref3 = _asyncToGenerator(function* (address) {\n    var matches = yield get_latlon(address);\n    if (matches.length == 0) {\n      return [];\n    } else {\n      var url = yield get_forecastURL(matches[0].coordinates);\n      var response = yield axios.get(url);\n      return response.data.properties.periods;\n    }\n  });\n  return function get_weather(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport { get_latlon, get_forecastURL, get_weather };","map":{"version":3,"names":["axios","require","get_latlon","_ref","_asyncToGenerator","address","encodeURI","url","console","log","response","fetch","json","result","addressMatches","_x","apply","arguments","get_forecastURL","_ref2","latlon","y","x","get","data","properties","forecast","_x2","get_weather","_ref3","matches","length","coordinates","periods","_x3"],"sources":["/Users/GSteinberg/Desktop/GitHub/cosi153a/AwesomeProject/lib/weatherAPI.js"],"sourcesContent":["const axios = require('axios')\n\n// returns a list of matches for an address\n// if there is a match the latlon is in the coordinates field\n// URL is\n// https://geocoding.geo.census.gov/geocoder/locations/onelineaddress?address=ADDRESS&benchmark=2020&format=json\nconst get_latlon = async (address) => {\n    address = encodeURI(address);\n    let url=\"https://geocoding.geo.census.gov/geocoder\"+\n              \"/locations/onelineaddress\"+\n              \"?address=\"+address+\n              \"&benchmark=2020\"+\n              \"&format=json\"\n    console.log('url=',url)\n    let response = await fetch(url)\n    let json = await response.json()\n    return json.result.addressMatches\n}\n\n// returns a forecast for any US location\n// given by lattitude and longitude\nconst get_forecastURL = async (latlon) => {\n  let url = \"https://api.weather.gov/points/\"+\n              latlon.y+\",\"+latlon.x\n  const response = await axios.get(url)\n  return response.data.properties.forecast\n}\n\nconst get_weather = async (address) => {\n  const matches = await get_latlon(address)\n  if (matches.length==0) {\n    return ([])\n  } else {\n    const url = await get_forecastURL(matches[0].coordinates)\n    const response = await axios.get(url)\n    return (response.data.properties.periods)\n  }\n}\n\nexport {get_latlon, get_forecastURL,  get_weather}\n"],"mappings":";AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAM9B,IAAMC,UAAU;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAK;IAClCA,OAAO,GAAGC,SAAS,CAACD,OAAO,CAAC;IAC5B,IAAIE,GAAG,GAAC,2CAA2C,GACzC,2BAA2B,GAC3B,WAAW,GAACF,OAAO,GACnB,iBAAiB,GACjB,cAAc;IACxBG,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,GAAG,CAAC;IACvB,IAAIG,QAAQ,SAASC,KAAK,CAACJ,GAAG,CAAC;IAC/B,IAAIK,IAAI,SAASF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAChC,OAAOA,IAAI,CAACC,MAAM,CAACC,cAAc;EACrC,CAAC;EAAA,gBAXKZ,UAAUA,CAAAa,EAAA;IAAA,OAAAZ,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWf;AAID,IAAMC,eAAe;EAAA,IAAAC,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,MAAM,EAAK;IACxC,IAAIb,GAAG,GAAG,iCAAiC,GAC/Ba,MAAM,CAACC,CAAC,GAAC,GAAG,GAACD,MAAM,CAACE,CAAC;IACjC,IAAMZ,QAAQ,SAASV,KAAK,CAACuB,GAAG,CAAChB,GAAG,CAAC;IACrC,OAAOG,QAAQ,CAACc,IAAI,CAACC,UAAU,CAACC,QAAQ;EAC1C,CAAC;EAAA,gBALKR,eAAeA,CAAAS,GAAA;IAAA,OAAAR,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAKpB;AAED,IAAMW,WAAW;EAAA,IAAAC,KAAA,GAAAzB,iBAAA,CAAG,WAAOC,OAAO,EAAK;IACrC,IAAMyB,OAAO,SAAS5B,UAAU,CAACG,OAAO,CAAC;IACzC,IAAIyB,OAAO,CAACC,MAAM,IAAE,CAAC,EAAE;MACrB,OAAQ,EAAE;IACZ,CAAC,MAAM;MACL,IAAMxB,GAAG,SAASW,eAAe,CAACY,OAAO,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC;MACzD,IAAMtB,QAAQ,SAASV,KAAK,CAACuB,GAAG,CAAChB,GAAG,CAAC;MACrC,OAAQG,QAAQ,CAACc,IAAI,CAACC,UAAU,CAACQ,OAAO;IAC1C;EACF,CAAC;EAAA,gBATKL,WAAWA,CAAAM,GAAA;IAAA,OAAAL,KAAA,CAAAb,KAAA,OAAAC,SAAA;EAAA;AAAA,GAShB;AAED,SAAQf,UAAU,EAAEgB,eAAe,EAAGU,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}